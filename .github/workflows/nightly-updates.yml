name: Nightly Update to Data Display

on: 
  schedule:
    - cron:  '0 0 * * *'
  workflow_dispatch:
  pull_request:

env:
  RECO: "/work/eic2/EPIC/RECO"
  FULL: "/work/eic2/EPIC/FULL"
  DETECTOR_CONFIG: "epic_craterlake"
  XROOTD_HOST: root://dtn-eic.jlab.org
  REPOSITORY: "${{github.repository}}"

jobs:
  campaigns_reco:
    runs-on: ubuntu-latest
    outputs:
      campaigns: ${{ steps.campaigns_reco.outputs.campaigns }}

    container:
      image: rucio/xrootd

    steps:
      - name: List campaigns
        id: campaigns_reco
        shell: bash
        run: |
          mapfile -t campaigns < <(xrdfs ${XROOTD_HOST} ls ${RECO} | awk -F'/' '{print $NF}' | sort -n)

          # Check if campaigns are found
          if [ ${#campaigns[@]} -eq 0 ]; then
            echo "No campaigns found for type: reco"
            echo "campaigns=[]" >> $GITHUB_OUTPUT  # Output an empty JSON array
            exit 0  # Exit without error
          fi

          # Convert array to JSON format for output
          # Ensure quotes around campaign names
          campaigns_json=$(printf ',"%s"' "${campaigns[@]}")
          campaigns_json="[${campaigns_json:1}]"  # Remove leading comma

          # Output campaigns as a JSON array
          echo "campaigns=${campaigns_json}" >> $GITHUB_OUTPUT

  create_list_reco:
    needs: campaigns_reco
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: feature-switch-to-xrootd-as-source
        
      - name: Update reco content list
        shell: bash
        run: |
          rm ./docs/_data/reco_content.yml
          touch ./docs/_data/reco_content.yml
          read -r -a campaigns_reco <<< $(echo ${{ needs.campaigns_reco.outputs.campaigns }} | tr -d '[]"' | tr ',' ' ')
          for reco in "${campaigns_reco[@]}"; do
              echo -e "- text: "$reco"\n  url: "/epic-prod/RECO/$reco"" >> ./docs/_data/reco_content.yml
          done
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ./docs/
          git commit -m "Update summary lists in RECO directory" || echo "No changes to commit"
          git push origin feature-switch-to-xrootd-as-source
          
  process_campaigns_reco:
    needs: campaigns_reco
    container:
      image: rucio/xrootd
    runs-on: ubuntu-latest
    strategy:
      matrix:
        campaign: ${{ fromJson(needs.campaigns_reco.outputs.campaigns) }}
    steps:
      - name: Process reco campaigns
        id: process_campaigns_reco
        run: |
          CAMPAIGN="${{ matrix.campaign }}"
          echo "Processing reco campaign: ${campaign}"
          # Add your processing logic here
          ROOT=${RECO}/${{ matrix.campaign }}/${DETECTOR_CONFIG}
          # Store output in a variable
          OUTPUT=$(xrdfs ${XROOTD_HOST} ls -R ${ROOT} | sed "s%${ROOT}/%%g" | awk 'BEGIN{FS=OFS="/"}{NF--;print}' | sort | uniq --count)
          echo "reco_${CAMPAIGN}=$(echo ${OUTPUT})" >> $GITHUB_OUTPUT
         
    outputs:
      reco_output_matrix: ${{ toJson(steps.process_campaigns_reco.outputs) }} 

  aggregate_outputs:
    runs-on: ubuntu-latest
    needs: [process_campaigns_reco, campaigns_reco]
    steps:
      - name: Access the array of arrays (reco_output_matrix)
        run: |
          # Retrieve the multi-dimensional array
          for CAMPAIGN in ${{ fromJson(needs.campaigns_reco.outputs.campaigns) }}; do
            echo "${{ needs.process_campaigns_reco.outputs['reco_' + CAMPAIGN] }}"
          done
      
      

  
    
        

          
      
         
