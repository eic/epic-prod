name: Nightly Update to Data Display

on: 
  schedule:
    - cron:  '0 0 * * *'
  workflow_dispatch:
  pull_request:

env:
  RECO: "/work/eic2/EPIC/RECO"
  FULL: "/work/eic2/EPIC/FULL"
  XROOTD_HOST: root://dtn-eic.jlab.org
  REPOSITORY: "${{github.repository}}"

jobs:
  campaigns:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: [reco, full]

    outputs:
      campaigns: ${{ steps.campaigns.outputs.campaigns }}

    container:
      image: rucio/xrootd

    steps:
      - name: List campaigns
        id: campaigns
        shell: bash
        run: |
          if [ "${{ matrix.type }}" == "reco" ]; then
            mapfile -t campaigns < <(xrdfs ${XROOTD_HOST} ls ${RECO} | awk -F'/' '{print $NF}' | sort -n)
          else
            mapfile -t campaigns < <(xrdfs ${XROOTD_HOST} ls ${FULL} | awk -F'/' '{print $NF}' | sort -n)
          fi

          # Check if campaigns are found
          if [ ${#campaigns[@]} -eq 0 ]; then
            echo "No campaigns found for type: ${{ matrix.type }}"
          fi

          # Convert array to JSON format for output
          campaigns_json="["
          for campaign in "${campaigns[@]}"; do
            campaigns_json+="\"$campaign\","
          done
          # Remove the trailing comma and close the JSON array
          campaigns_json="${campaigns_json%,}]"
          
          # Store campaigns in an environment variable
          echo "CAMPAIGNS_${{ matrix.type }}=${campaigns_json}" >> $GITHUB_ENV

          # Output campaigns (space-separated) to be used as an output
          echo "campaigns=${campaigns[*]}" >> $GITHUB_OUTPUT

      - name: Print outputs
        run: |
          echo "${{ matrix.type }} campaigns:"
          if [ "${{ matrix.type }}" == "reco" ]; then
            echo "${{ env.CAMPAIGNS_reco }}"
          else
            echo "${{ env.CAMPAIGNS_full }}"
          fi

  print_reco_list:
    needs: campaigns
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: ${{ fromJson(env.CAMPAIGNS_reco) }}
    steps:
      - name: Print reco list
        run: |
          echo "{{matrix.type}}"
          
  update_data:
    runs-on: ubuntu-latest
    container:
      image: minio/mc:RELEASE.2023-10-14T01-57-03Z
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Search the database and save the file names as a list
      shell: bash
      run: |
        if [ -d ./docs/RECO ]; then rm -rf ./docs/RECO; fi
        if [ -d ./docs/FULL ]; then rm -rf ./docs/FULL; fi
        mc config host add S3 ${S3_HOST} ${S3_ACCESS_KEY} ${S3_SECRET_KEY}
        chmod +x ./docs/_data/list_S3.sh
        ./docs/_data/list_S3.sh RECO > ./docs/_data/reco_content.yml
        ./docs/_data/list_S3.sh FULL > ./docs/_data/full_content.yml
      env:
        S3_HOST: ${{secrets.S3_HOST}}
        S3_ACCESS_KEY: ${{secrets.S3_ACCESS_KEY}}
        S3_SECRET_KEY: ${{secrets.S3_SECRET_KEY}}
    - name: Upload reco_content
      uses: actions/upload-artifact@v4
      with:
        name: reco_content
        path: ./docs/_data/reco_content.yml
    - name: Upload full_content
      uses: actions/upload-artifact@v4
      with:
        name: full_content
        path: ./docs/_data/full_content.yml
    - name: Upload RECO
      uses: actions/upload-artifact@v4
      with:
        name: RECO
        path: ./docs/RECO/
    - name: Upload FULL
      uses: actions/upload-artifact@v4
      with:
        name: FULL
        path: ./docs/FULL/
        
  commit_data:
    needs: update_data
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Remove old s3_content
      shell: bash
      run: |
        if [ -f ./docs/_data/reco_content.yml ]; then rm -f ./docs/_data/reco_content.yml; fi
        if [ -f ./docs/_data/full_content.yml ]; then rm -f ./docs/_data/full_content.yml; fi
        if [ -d ./docs/RECO ]; then rm -rf ./docs/RECO; fi
        if [ -d ./docs/FULL ]; then rm -rf ./docs/FULL; fi
        mkdir ./docs/RECO/
        mkdir ./docs/FULL/
    - name: Download reco_content
      uses: actions/download-artifact@v4
      with:
        name: reco_content
        path: ./docs/_data/
    - name: Download full_content
      uses: actions/download-artifact@v4
      with:
        name: full_content
        path: ./docs/_data/
    - name: Download RECO
      uses: actions/download-artifact@v4
      with:
        name: RECO
        path: ./docs/RECO/
    - name: Download FULL
      uses: actions/download-artifact@v4
      with:
        name: FULL
        path: ./docs/FULL/
    - name: Commit updates
      shell: bash
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add ./docs/
        git commit -m "Update summary lists in RECO and FULL directory" || echo "No changes to commit"
        git push origin main
